import { Browser } from 'puppeteer';
import puppeteer from 'puppeteer-extra';
import download from 'download';
import util from 'util';
const exec = util.promisify(require('child_process').exec);
import fs from 'fs/promises'
import path from 'path';
const { email, password } = require('../../config.json');
import axios from 'axios'
// Relative paths
export const waifu = path.resolve(__dirname);
import { logIn, buyTicket, start } from './kakao';
import randomstring from 'randomstring'
import Handler from '../handlers';
import downloader from 'nodejs-file-downloader'



function getGQLQuery_Ticket(seriesId: number) {
    return {
        operationName: "contentMyTicket",
        query: "query contentMyTicket($seriesId: Long!, $includeSingle: Boolean, $includeWaitfree: Boolean, $onlyPaidTicket: Boolean) { \n  contentMyTicket(\n    seriesId: $seriesId\n    includeSingle: $includeSingle\n    includeWaitfree: $includeWaitfree\n    onlyPaidTicket: $onlyPaidTicket\n) { \n    notOwnCount\n    notReadCount\n    ticketOwnCount\n    ticketRentalCount\n    waitfree { \n      activation\n      chargedAt\n      chargedComplete\n      waitfreePlusProvision { \n        chargedAt\n        chargedTicketCount\n        nextChargeAt\n        nextChargeTicketCount\n        remainTicketCount\n        usedTicketCount\n        __typename\n } \n      __typename\n } \n    __typename\n } \n } \n",
        variables: {
            seriesId,
            includeSingle: false,
            onlyPaidTicket: false,
            includeWaitfree: true
        }
    }
}

function getGQLQuery_Content(seriesId: number, productId: number) {
    return {
        operationName: "viewerInfo",
        query: "query viewerInfo($seriesId: Long!, $productId: Long!) {\n  viewerInfo(seriesId: $seriesId, productId: $productId) {\n    item {\n      ...SingleFragment\n      __typename\n    }\n    seriesItem {\n      ...SeriesFragment\n      __typename\n    }\n    prevItem {\n      ...NearItemFragment\n      __typename\n    }\n    nextItem {\n      ...NearItemFragment\n      __typename\n    }\n    viewerData {\n      ...TextViewerData\n      ...TalkViewerData\n      ...ImageViewerData\n      ...VodViewerData\n      __typename\n    }\n    displayAd {\n      ...DisplayAd\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment SingleFragment on Single {\n  id\n  productId\n  seriesId\n  title\n  thumbnail\n  badge\n  isFree\n  ageGrade\n  state\n  slideType\n  lastReleasedDate\n  size\n  pageCount\n  isHidden\n  freeChangeDate\n  isWaitfreeBlocked\n  saleState\n  series {\n    ...SeriesFragment\n    __typename\n  }\n  serviceProperty {\n    ...ServicePropertyFragment\n    __typename\n  }\n  operatorProperty {\n    ...OperatorPropertyFragment\n    __typename\n  }\n  assetProperty {\n    ...AssetPropertyFragment\n    __typename\n  }\n}\n\nfragment SeriesFragment on Series {\n  id\n  seriesId\n  title\n  thumbnail\n  categoryUid\n  category\n  subcategoryUid\n  subcategory\n  badge\n  isAllFree\n  isWaitfree\n  isWaitfreePlus\n  ageGrade\n  state\n  onIssue\n  seriesType\n  businessModel\n  authors\n  pubPeriod\n  freeSlideCount\n  lastSlideAddedDate\n  waitfreeBlockCount\n  waitfreePeriodByMinute\n  bm\n  saleState\n  serviceProperty {\n    ...ServicePropertyFragment\n    __typename\n  }\n  operatorProperty {\n    ...OperatorPropertyFragment\n    __typename\n  }\n  assetProperty {\n    ...AssetPropertyFragment\n    __typename\n  }\n}\n\nfragment ServicePropertyFragment on ServiceProperty {\n  viewCount\n  readCount\n  ratingCount\n  ratingSum\n  commentCount\n  pageContinue {\n    ...ContinueInfoFragment\n    __typename\n  }\n  todayGift {\n    ...TodayGift\n    __typename\n  }\n  waitfreeTicket {\n    ...WaitfreeTicketFragment\n    __typename\n  }\n  isAlarmOn\n  isLikeOn\n  ticketCount\n  purchasedDate\n  lastViewInfo {\n    ...LastViewInfoFragment\n    __typename\n  }\n  purchaseInfo {\n    ...PurchaseInfoFragment\n    __typename\n  }\n}\n\nfragment ContinueInfoFragment on ContinueInfo {\n  title\n  isFree\n  productId\n  lastReadProductId\n  scheme\n  continueProductType\n}\n\nfragment TodayGift on TodayGift {\n  id\n  uid\n  ticketType\n  ticketKind\n  ticketCount\n  ticketExpireAt\n  isReceived\n}\n\nfragment WaitfreeTicketFragment on WaitfreeTicket {\n  chargedPeriod\n  chargedCount\n  chargedAt\n}\n\nfragment LastViewInfoFragment on LastViewInfo {\n  isDone\n  lastViewDate\n  rate\n  spineIndex\n}\n\nfragment PurchaseInfoFragment on PurchaseInfo {\n  purchaseType\n  rentExpireDate\n}\n\nfragment OperatorPropertyFragment on OperatorProperty {\n  thumbnail\n  copy\n  torosImpId\n  torosFileHashKey\n  isTextViewer\n}\n\nfragment AssetPropertyFragment on AssetProperty {\n  bannerImage\n  cardImage\n  cardTextImage\n  cleanImage\n  ipxVideo\n}\n\nfragment NearItemFragment on NearItem {\n  productId\n  slideType\n  ageGrade\n  isFree\n  title\n  thumbnail\n}\n\nfragment TextViewerData on TextViewerData {\n  type\n  atsServerUrl\n  metaSecureUrl\n  contentsList {\n    chapterId\n    contentId\n    secureUrl\n    __typename\n  }\n}\n\nfragment TalkViewerData on TalkViewerData {\n  type\n  talkDownloadData {\n    dec\n    host\n    path\n    talkViewerType\n    __typename\n  }\n}\n\nfragment ImageViewerData on ImageViewerData {\n  type\n  imageDownloadData {\n    ...ImageDownloadData\n    __typename\n  }\n}\n\nfragment ImageDownloadData on ImageDownloadData {\n  files {\n    ...ImageDownloadFile\n    __typename\n  }\n  totalCount\n  totalSize\n  viewDirection\n  gapBetweenImages\n  readType\n}\n\nfragment ImageDownloadFile on ImageDownloadFile {\n  no\n  size\n  secureUrl\n  width\n  height\n}\n\nfragment VodViewerData on VodViewerData {\n  type\n  vodDownloadData {\n    contentId\n    drmType\n    endpointUrl\n    width\n    height\n    duration\n    __typename\n  }\n}\n\nfragment DisplayAd on DisplayAd {\n  sectionUid\n  bannerUid\n  treviUid\n  momentUid\n}\n",
        variables: {
            seriesId,
            productId
        }
    }
}


const Init = async () => {
    const browser = await start();
    const { cookies } = await logIn(browser);


    console.log(cookies);
    // const test = await axios.post('https://page.kakao.com/graphql', {
    //     "operationName": "viewerInfo",
    //     "query": "query viewerInfo($seriesId: Long!, $productId: Long!) {\n  viewerInfo(seriesId: $seriesId, productId: $productId) {\n    item {\n      ...SingleFragment\n      __typename\n    }\n    seriesItem {\n      ...SeriesFragment\n      __typename\n    }\n    prevItem {\n      ...NearItemFragment\n      __typename\n    }\n    nextItem {\n      ...NearItemFragment\n      __typename\n    }\n    viewerData {\n      ...TextViewerData\n      ...TalkViewerData\n      ...ImageViewerData\n      ...VodViewerData\n      __typename\n    }\n    displayAd {\n      ...DisplayAd\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment SingleFragment on Single {\n  id\n  productId\n  seriesId\n  title\n  thumbnail\n  badge\n  isFree\n  ageGrade\n  state\n  slideType\n  lastReleasedDate\n  size\n  pageCount\n  isHidden\n  freeChangeDate\n  isWaitfreeBlocked\n  saleState\n  series {\n    ...SeriesFragment\n    __typename\n  }\n  serviceProperty {\n    ...ServicePropertyFragment\n    __typename\n  }\n  operatorProperty {\n    ...OperatorPropertyFragment\n    __typename\n  }\n  assetProperty {\n    ...AssetPropertyFragment\n    __typename\n  }\n}\n\nfragment SeriesFragment on Series {\n  id\n  seriesId\n  title\n  thumbnail\n  categoryUid\n  category\n  subcategoryUid\n  subcategory\n  badge\n  isAllFree\n  isWaitfree\n  isWaitfreePlus\n  ageGrade\n  state\n  onIssue\n  seriesType\n  businessModel\n  authors\n  pubPeriod\n  freeSlideCount\n  lastSlideAddedDate\n  waitfreeBlockCount\n  waitfreePeriodByMinute\n  bm\n  saleState\n  serviceProperty {\n    ...ServicePropertyFragment\n    __typename\n  }\n  operatorProperty {\n    ...OperatorPropertyFragment\n    __typename\n  }\n  assetProperty {\n    ...AssetPropertyFragment\n    __typename\n  }\n}\n\nfragment ServicePropertyFragment on ServiceProperty {\n  viewCount\n  readCount\n  ratingCount\n  ratingSum\n  commentCount\n  pageContinue {\n    ...ContinueInfoFragment\n    __typename\n  }\n  todayGift {\n    ...TodayGift\n    __typename\n  }\n  waitfreeTicket {\n    ...WaitfreeTicketFragment\n    __typename\n  }\n  isAlarmOn\n  isLikeOn\n  ticketCount\n  purchasedDate\n  lastViewInfo {\n    ...LastViewInfoFragment\n    __typename\n  }\n  purchaseInfo {\n    ...PurchaseInfoFragment\n    __typename\n  }\n}\n\nfragment ContinueInfoFragment on ContinueInfo {\n  title\n  isFree\n  productId\n  lastReadProductId\n  scheme\n  continueProductType\n}\n\nfragment TodayGift on TodayGift {\n  id\n  uid\n  ticketType\n  ticketKind\n  ticketCount\n  ticketExpireAt\n  isReceived\n}\n\nfragment WaitfreeTicketFragment on WaitfreeTicket {\n  chargedPeriod\n  chargedCount\n  chargedAt\n}\n\nfragment LastViewInfoFragment on LastViewInfo {\n  isDone\n  lastViewDate\n  rate\n  spineIndex\n}\n\nfragment PurchaseInfoFragment on PurchaseInfo {\n  purchaseType\n  rentExpireDate\n}\n\nfragment OperatorPropertyFragment on OperatorProperty {\n  thumbnail\n  copy\n  torosImpId\n  torosFileHashKey\n  isTextViewer\n}\n\nfragment AssetPropertyFragment on AssetProperty {\n  bannerImage\n  cardImage\n  cardTextImage\n  cleanImage\n  ipxVideo\n}\n\nfragment NearItemFragment on NearItem {\n  productId\n  slideType\n  ageGrade\n  isFree\n  title\n  thumbnail\n}\n\nfragment TextViewerData on TextViewerData {\n  type\n  atsServerUrl\n  metaSecureUrl\n  contentsList {\n    chapterId\n    contentId\n    secureUrl\n    __typename\n  }\n}\n\nfragment TalkViewerData on TalkViewerData {\n  type\n  talkDownloadData {\n    dec\n    host\n    path\n    talkViewerType\n    __typename\n  }\n}\n\nfragment ImageViewerData on ImageViewerData {\n  type\n  imageDownloadData {\n    ...ImageDownloadData\n    __typename\n  }\n}\n\nfragment ImageDownloadData on ImageDownloadData {\n  files {\n    ...ImageDownloadFile\n    __typename\n  }\n  totalCount\n  totalSize\n  viewDirection\n  gapBetweenImages\n  readType\n}\n\nfragment ImageDownloadFile on ImageDownloadFile {\n  no\n  size\n  secureUrl\n  width\n  height\n}\n\nfragment VodViewerData on VodViewerData {\n  type\n  vodDownloadData {\n    contentId\n    drmType\n    endpointUrl\n    width\n    height\n    duration\n    __typename\n  }\n}\n\nfragment DisplayAd on DisplayAd {\n  sectionUid\n  bannerUid\n  treviUid\n  momentUid\n}\n",
    //     "variables": {
    //         "seriesId": 56520811,
    //         "productId": 60289091
    //     }
    // }, {
    //     headers: {
    //         Cookie: '_kptid=5f40e8187bd44dff9e09bab89446e903; _fbp=fb.1.1653830527337.1563394424; __T_=1; TIARA=jg6YuJc1x9AuRsPwRfd3gIxN41qu8g6BEj4TgEsvV-fqbH9NllkasLJAXFOzrYStuZeuKB9TdxJOiap5qLrjljulLfyVWaf7SZvmCOTWKIE0; _kp_collector=KP.1494425122.1655039063075; _kadu=oR0DErKI8bqJjJpQ_1655040999775; theme=dark; _kahai=6148d8c50e20a4443827c2cc0e240746772e2d2f0bc2dd8c0554c0dc8d9ecb20; JSESSIONID=334C6882C733E19B206C1C8BC62B554F; _kpdid=e228f2c0015441cbbf20bc747720a16d; _kawlt=X56eL9PdI6fjRTeoFppkQlQ-yOCsq76pm1JhyDWI-uFRih_z2TjPu5KU2j8BzWODa95iV1Dn1I9kK89TOJ2eGoDzozvubKzdPKcXL1jIqOPMsc4yHtBQpJ2Ag_coo1ol; _kawltea=1664017041; _karmt=6w6oJxaoi05LMO-VWBGLkbFZrXSe8dsVb03OtSfcQxFJ4X31XC5liOO4T7Ef4xre; _karmtea=1666544241; _kpawbat=RA_XqIgdNFDQKqAJTmIn040EtzkvAO4HhzsEj-T8Cj1z6wAAAYNqo4WD; _T_ANO=CPmH8FtG8Pn7u1IqU4dISH0d2zj/FM5E26rNHtmOQG08tJZhoyHkHIArdYHr2WCujcz4r1D9gIsqczmUMXlvfnq0e7CzrktSkIvuM1Wc2Zmtggu2NLWi2MgtdezXBfuU1uKRCLRAT0iWR0M+89fwGXMO4gtm+vlpJR9xt3d1M1021Sm5T5+++iD2XAiP9JJojYnkxKD4XzaAOXydaLORvGMzGNmldosg6VZLljm7ZwXl81gpDuBAWNOAi3gJFbwzZ7eNj0Vfdtw/t8T/CL3P4s0CXy5wpxRwRCLP5S7ODACVt6LYbMq+pj6G6+BvbufCYcZklkavAvmkD1ODBwyjfw==; _kpwtkn=U2FsdGVkX1%2FDw47ylsM1q3kMN8JObE%2BdHhWEo9HSIea%2BtiHNlrryTpZcFF98ZEpWvJeXYWv4kZBCt0vJz3dIWkHbaienQdXTnHhax%2BKRU8xJJCSNfOtpDKzUbxUBBCRggAww1Z77SX3zz8sdiOllqoybBk8zbNnnNhleY5WKR7dP5v4H%2F9U7jb9NbOdQCM%2BmIbmzIO6sn1r850OAOJ4iJzZWXizegk6Ov3XHpPDsDA6hpv0ksEVdXq%2FVTa7Ika3s9Vo%2BQI4COzEKjn4IoyYfxs3Wg%2FeQ6tLMC%2FjLL8MSRxBo991WCl2QHVheHaunVmeo3kxjdIktuEW9JN4QAawD5Mx30EUd1lE4QjWXeiluW7wYxiMO3QUwrHFzdTpYp4GjCXxuBnumoBpJ5Iquo%2F1jL8Ozyzkvfu7ihXtMX3BXHW2%2B4bZjWJ3mGiWv2NBvuMhpgfkx4zVJc7ohinIwZJ03lT3CDDrQ%2FtGIBhD3Wmdj1IqgBqhy2V4do1%2F2gX9YRb5Y67Kt6q%2B6LTiP6CExBmggLLlzidouUtuSnB3%2BRc1GfBO%2BO52e3JqLSyIfSGTg8JSdVSZiKI%2BYjg7lL84aqy3qYP2LymTo9WF6jZIW3%2BgkYNTeNmm%2FuZDP1ZWCbzQd4VvO69xh8j%2FslWHDQDEUA%2Bj9UItU5ErQ8WKjZWqO5U4tmVWfssnEzZMGPIXN5svmhQQG6WrCA83OqgGz2ntaErx8KA8K19hohP6b3lcd1cNvcLk54%2BvTChTC4iZ1Pc5OHvIErF5kCA2U6VAZiJqT2oZSSf%2FYynwlZ5PO187HCGaKGJiHYVDpBdlW76Jg0mbDzUO42r3W9NeFKmu2yu0DRT2wDHMMuT5JsW3hCG%2Bfc1KRwCFCz%2BBh0uEuJs%2B3hnfSle3A28Zs6vPser14Ar3hP5zyi1aASgBcNtpw%2BezrYyK5wxaNUUgyDjpFvTpnncMZUAd4LtQmt2JmoIrTVj%2BymBncOmWOIx8Vw%2FOQnKl89l6IXSloMUJ7xDsOXYSlpOKoKGK08jSzNFEUMcWvO%2BqIpk%2Fmy2bnwzscQ9yvQGAyx651I7zWHGtY12NkzBikJGtTeYM5; _kpw_katkn=eyJhbGciOiJFUzI1NiJ9.eyJhY2Nlc3NUb2tlbiI6IlJBX1hxSWdkTkZEUUtxQUpUbUluMDQwRXR6a3ZBTzRIaHpzRWotVDhDajF6NndBQUFZTnFvNFdEIiwiYXBwVXNlcklkIjoxNzI4MzM1OTA1LCJyZWZyZXNoVG9rZW5FeHBpcmVEYXRlIjoiMjAyMi0xMS0yMlQxMzo1NzoyNy4zNDdaIiwicHJvY2Vzc0luU2lnblVwIjpmYWxzZSwiaWF0IjoxNjYzOTQxNDYwLCJpc3MiOiJ1cm46cGFnZS5rYWthby5jb206aXNzdWVyIiwiYXVkIjoidXJuOnBhZ2VzdGFnZS5rYWthby5jb206YXVkaWVuY2UiLCJleHAiOjE2NjM5NDg2NjB9.jO0G2y14y6Hp4EH7hlZR7_ck5HDTj8_HJeAkhiZ4-HEAv2uVZJdbD_TIFsaPCfC3oXrSvQfqNISEdITuLCLXmw',
    //         'Content-Type': 'application/json'
    //     }
    // })

    // console.log(test.data);
}

Init();